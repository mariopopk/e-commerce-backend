type Query {
  categories: [Category]
  category(id: ID!): Category
  products(
    query: String
    sort: ProductSort
    filter: ProductFilter
    pagination: Pagination
  ): ProductsResult
  product(id: ID!): Product
}

type Category {
  id: ID!
  parentId: String
  name: String!
  slug: String!
  imageBannerUrl: String
  imageThumbnailUrl: String
  showInDesktopNav: Boolean
  showInMobileNav: Boolean
  subcategories: [Category]
  parentCategory: Category
  products: [Product]
}

type Product {
  id: ID!
  category: Category
  name: String!
  slug: String!
  imageUrl: String!
  description: String!
  price: Int!
  purchasable: Boolean!
  variants: [ProductVariant]
  options: [ProductOptions]
}

type ProductVariant {
  id: ID!
  productId: ID!
  colorName: String
  price: Float!
  imageUrl: String
  hoverImageUrl: String
  swatchImageUrl: String
  options: [ProductOptions]
}

type ProductOptions {
  id: ID!
  name: String
  productId: String
  category: String
  labels: [String]
  counts: [Int]
}

type ProductsResult {
  list: [Product]
  skip: Int
  take: Int
  total: Int
}

input ProductSort {
  property: String
  order: String
}

input ProductFilter {
  size: String
  fit: String
  color: String
  categoryId: ID
}

input Pagination {
  skip: Int
  take: Int
}
